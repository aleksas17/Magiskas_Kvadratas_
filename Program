  1 #include <stdio.h>
  2  #include <stdlib.h>
  3  #include <time.h>
  4  #include "stulpeliu_suma.h"
  5  
  6  int main()
  7  {
  8      int s_aukstis=0, s_plotis=0, i, j, k=0, plo=0, auk=0, ATS=0, ATS_1=0, good=0, a=0, p=0;
  9      int magic_stulpelis=0, magic_eilute=0, magic_istryzaine_1=0, magic_istryzaine_2=0;
 10      int *rodykle = &s_aukstis, *rodykle_1 = &s_plotis;
 11      time_t kint;
 12      time(&kint);
 13      srand(kint);
 14      printf("****MAGISKU KVADRATU RADEJAS****\n");
 15      printf("\n");
 16      printf("\n");
 17      printf("Iveskite koki noresite tureti dydzio staciakampi \n");
 18      printf("Aukstis: ");
 19      scanf("%d", &*rodykle);
 20      printf("Plotis: ");
 21      scanf("%d", &*rodykle_1);
 22      int staciakampis[s_aukstis][s_plotis];
 23      for(i=0; i<=s_aukstis-1;i++)              ///// surasomi skaiciai i musu staciakampi ir jis ispausdina /////
 24      {
 25         for(j=0;j<=s_plotis-1;j++)
 26         {
 27          if (j==0)
 28              printf("\n");
 29            staciakampis[i][j] = rand()%10;
 30            printf("%d | ", staciakampis[i][j]);
 31  
 32         }
 33      }                                                   ///// *************** /////
 34      printf("\n");
 35      printf("\n");
 36      printf("Iveskite koki noresite tureti MAGISKO KVADRATO dydi \n");
 37      printf("Kvadrato dydis: ");
 38      while (good<1)                                 ///// Uztikrinam kad MAGISKAS KVADRATAS nebutu didesnis uz musu staciakampi /////
 39      {
 40      scanf("%d", &k);
 41      if (k>s_aukstis || k>s_plotis || k<=1)
 42      {
 43          if (k<=1)
 44          printf("MAGISKAS KVADRATAS per mazas iveskite is naujo: \n");
 45          else
 46          printf("MAGISKAS KVADRATAS per didelis iveskite is naujo: \n");
 47      }
 48      else
 49          good=1;
 50      }                                                                               ///// *************** /////
 51      int kvadratas[k][k], magiska_suma[k*k];
 52      for(i=0;i<k;i++)                                                ///// Naujas sukurtas masyvas(kvadratas) vaiksto po musu /////
 53      {                                                                     ///// seniau sukurta masyva(staciakampis) /////
 54      if (j==k)
 55          printf("\n");
 56         for(j=0;j<k;j++)
 57         {
 58          kvadratas[i][j] = staciakampis[i+auk][j+plo];
 59          printf("%d | ", kvadratas[i][j]);
 60          magic_stulpelis += kvadratas[i][j];
 61          if (j==p)
 62              magic_istryzaine_1 += kvadratas[i][j];
 63          if (j==(k-1)-p)
 64              magic_istryzaine_2 += kvadratas[i][j];
 65         }
 66         magiska_suma[a] = magic_stulpelis;
 67         a += 1;
 68         if (i==k-1)
 69         {
 70              magiska_suma[a] = magic_istryzaine_1;
 71              a += 1;
 72              magiska_suma[a] = magic_istryzaine_2;
 73              a += 1;
 74         }
 75         magic_stulpelis = 0;
 76         p += 1;
 77         if (i==k-1)                                                              ///// Grazina skaicius i pradniu parametru kaip i, j, sum /////
 78         {
 79             for(i=0;i<k;i++)
 80             {
 81                 for(j=0;j<k;j++)
 82                  {
 83                      magic_eilute += kvadratas[j][i];
 84                  }
 85                  magiska_suma[a] = magic_eilute;
 86                  a += 1;
 87                  magic_eilute = 0;
 88             }
 89             for (j=0;j<k*2+2;j++)
 90             {
 91                  printf("%d , ", magiska_suma[j]);
 92             }
 93             for (j=1;j<k*2+2;j++)
 94              {
 95                  if (magiska_suma[0]!=magiska_suma[j])
 96                  {
 97                      printf("ne magiskas kvadratas");
 98                      j=k*2+3;
 99                  }
100                  else
101                      ATS+=1;
102              }
103              if (ATS == k*2+1)
104              {
105                  printf("magiskas kvadratas !!!!!!!!!!");
106                  ATS_1 = SUM(ATS_1);
107              }
108              printf(" \n");
109              printf(" \n");
110              if (plo<s_plotis-k)                                ///// Parindinis vaiksiotojas kuris kelnoja stulpelius ir eiluter/////
111                  plo += 1;
112              else
113              {
114                  auk += 1;
115                  plo = 0;
116              }                                                                       ///// *************** /////
117              magic_istryzaine_1 = 0;
118              magic_istryzaine_2 = 0;
119              p = 0;
120              a = 0;
121              i = -1;
122              j = -1;
123              ATS = 0;
124              if (auk==s_aukstis-(k-1))
125                  i=k+1;
126         }
127      }                                                                                    ///// *************** /////
128      printf("Visame staciakampyje(%dx%d) MAGISKU KVADRATU yra: %d", s_aukstis, s_plotis, ATS_1);
129      return 0;
130  }
